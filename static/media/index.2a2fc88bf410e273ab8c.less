@import '../../../style/mixin.less';

.@{prefix}-stepper {
    display: flex;
    .use-var(font-size, stepper-font-size);

    &.@{prefix}-square {
        border-width: 1PX;
        border-style: solid;
        .use-var(border-color, stepper-square-border-color);
        .use-var(border-radius, stepper-square-border-radius);

        .@{prefix}-stepper {
            &-add-button,
            &-minus-button,
            &-input {
                .use-var(background, stepper-square-background-color);
            }
            &-input {
                border-left-width: 1PX;
                border-right-width: 1PX;
                border-style: solid;
                .use-var(border-left-color, stepper-square-border-color);
                .use-var(border-right-color, stepper-square-border-color);
            }
        }
    }

    &.@{prefix}-round {
        .@{prefix}-stepper {
            &-minus-button,
            &-add-button {
                .use-var(border-radius, stepper-round-button-border-radius);
            }
            &-input {
                .use-var(background, stepper-round-input-background-color);
            }
        }
    }

    &-minus-button {
        display: flex;
        align-items: center;
        justify-content: center;
        .use-var(font-size, stepper-button-icon-size);
        .use-var(width, stepper-button-size);
        .use-var(height, stepper-button-size);
        .use-var(background, stepper-default-background-color);

        &-icon {
            .use-var(color, stepper-content-color);

            &.disabled {
                .use-var(color, stepper-disable-color);
            }
        }
    }

    &-input {
        text-align: center;
        .use-var(width, stepper-input-width);
        .use-var(height, stepper-input-height);
        .use-var(background, stepper-default-background-color);
        .use-var(color, stepper-content-color);
        .use-var(margin, stepper-input-margin);
    }

    &-add-button {
        display: flex;
        align-items: center;
        justify-content: center;
        .use-var(font-size, stepper-button-icon-size);
        .use-var(width, stepper-button-size);
        .use-var(height, stepper-button-size);
        .use-var(background, stepper-default-background-color);

        &-icon {
            .use-var(color, stepper-content-color);

            &.disabled {
                .use-var(color, stepper-disable-color);
            }
        }
    }
}

/***************************************************
 *                                                 *
 *               Arco Theme Style                  *
 *                                                 *
 ***************************************************/
    & when (@use-dark-mode = 1) {
    
  .process-bg-color-with-config,
  .process-custom-icon-bg-color-with-config {
    @{arco-dark-mode-selector} & {
      .use-var(color, dark-steps-process-with-config-item-icon-color);
      .use-var(color, dark-steps-process-with-config-item-icon-color);
    }
  }
  .wait-custom-icon-bg-color-with-config {
    @{arco-dark-mode-selector} & {
      .use-var(background, dark-steps-wait-icon-num-background);
      .use-var(color, dark-sub-info-font-color);
      .use-var(background, dark-steps-wait-icon-num-background);
      .use-var(color, dark-sub-info-font-color);
    }
  }
  .@{prefix}-stepper {
    &.@{prefix}-square {
      @{arco-dark-mode-selector} & {
        .use-var(border-color, dark-stepper-square-border-color);
      }
      .@{prefix}-stepper {
        &-input {
          @{arco-dark-mode-selector} & {
            .use-var(border-left-color, dark-stepper-square-border-color);
            .use-var(border-right-color, dark-stepper-square-border-color);
          }
        }
      }
    }
    &-minus-button {
      @{arco-dark-mode-selector} & {
        .use-var(background, dark-stepper-default-background-color);
      }
      &-icon {
        @{arco-dark-mode-selector} & {
          .use-var(color, dark-stepper-content-color);
        }
        &.disabled {
          @{arco-dark-mode-selector} & {
            .use-var(color, dark-stepper-disable-color);
          }
        }
      }
    }
    &-input {
      @{arco-dark-mode-selector} & {
        .use-var(background, dark-stepper-default-background-color);
        .use-var(color, dark-stepper-content-color);
      }
    }
    &-add-button {
      @{arco-dark-mode-selector} & {
        .use-var(background, dark-stepper-default-background-color);
      }
      &-icon {
        @{arco-dark-mode-selector} & {
          .use-var(color, dark-stepper-content-color);
        }
        &.disabled {
          @{arco-dark-mode-selector} & {
            .use-var(color, dark-stepper-disable-color);
          }
        }
      }
    }
  }
}
/********************* End *************************/
